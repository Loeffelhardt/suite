_COMPOSER_INSTALL: &COMPOSER_INSTALL
    - echo "_COMPOSER_INSTALL"
    - COMPOSER_MEMORY_LIMIT=-1 composer install --optimize-autoloader --no-interaction --prefer-install=auto

_COMPOSER_PREFER_LOWEST: &COMPOSER_PREFER_LOWEST
    - echo "_COMPOSER_PREFER_LOWEST"
    - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --optimize-autoloader --no-interaction --prefer-install=auto
    - COMPOSER_MEMORY_LIMIT=-1 composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies;

_ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE: &ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE
    - redis-tools
    - redis-server
    - rabbitmq-server
    - graphviz
    - libzip-dev
    - awscli
    - gnupg
    - libnss3-dev
    - ca-certificates
    - fonts-liberation
    - libappindicator3-1
    - libasound2
    - libatk-bridge2.0-0
    - libatk1.0-0
    - libc6
    - libcairo2
    - libcups2
    - libdbus-1-3
    - libexpat1
    - libfontconfig1
    - libgbm1
    - libgcc1
    - libglib2.0-0
    - libgtk-3-0
    - libnspr4
    - libnss3
    - libpango-1.0-0
    - libpangocairo-1.0-0
    - libstdc++6
    - libx11-6
    - libx11-xcb1
    - libxcb1
    - libxcomposite1
    - libxcursor1
    - libxdamage1
    - libxext6
    - libxfixes3
    - libxi6
    - libxrandr2
    - libxrender1
    - libxss1
    - libxtst6
    - lsb-release
    - xdg-utils

_ADDONS_BASE_INFRASTRUCTURE: &ADDONS_BASE_INFRASTRUCTURE
    apt:
        update: true
        packages:
            - *ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE

    hosts:
        - backend-api.de.spryker.test
        - backend-gateway.de.spryker.test
        - backoffice.de.spryker.test
        - glue.de.spryker.test
        - www.de.spryker.test

_START_ELASTICSEARCH: &START_ELASTICSEARCH
    - /home/travis/elasticsearch/bin/elasticsearch --daemonize

_INSTALL_ELASTICSEARCH_7: &INSTALL_ELASTICSEARCH_7
    - mkdir -p $HOME/other-download
    - mkdir -p /home/travis/elasticsearch
    - |
        ./config/Shared/ci/travis/download-and-cache-file.sh  \
          https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-linux-x86_64.tar.gz \
          $HOME/other-download
    - |
        tar \
          xz \
          -f $HOME/other-download/elasticsearch-7.6.2-linux-x86_64.tar.gz \
          --directory=/home/travis/elasticsearch \
          --strip-components=1 > /dev/null
    - *START_ELASTICSEARCH

_AWS_SYNC_CONFIG: &AWS_SYNC_CONFIG
    - aws configure set default.s3.max_concurrent_requests 80
    - aws configure set default.s3.max_queue_size 6000
    - aws configure set default.s3.multipart_threshold 36MB
    - aws configure set default.s3.multipart_chunksize 16MB

_AWS_SYNC_UP_POSTGRES: &AWS_SYNC_UP_POSTGRES
    - echo "_AWS_SYNC_UP_POSTGRES"
    - *AWS_SYNC_CONFIG
    - |
        aws s3 cp $TRAVIS_BUILD_DIR s3://spryker-ci/stage-artifacts/postgres/$TRAVIS_BUILD_NUMBER/ \
          --exclude '.git/*' \
          --exclude '.github/*' \
          --exclude '*.lock' \
          --exclude 'docker/*' \
          --exclude 'node_modules/*' \
          --exclude 'src/Pyz/*' \
          --exclude 'src/SprykerConfig/*' \
          --exclude 'tests/Benchmark/*' \
          --exclude 'vendor/*' \
          --recursive \
          --quiet \
          --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"

_AWS_SYNC_DOWN_POSTGRES: &AWS_SYNC_DOWN_POSTGRES
    - echo "_AWS_SYNC_DOWN_POSTGRES"
    - *AWS_SYNC_CONFIG
    - aws s3 cp s3://spryker-ci/stage-artifacts/postgres/$TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_DIR --recursive --quiet

_CHROMDRIVER_DOWNLOAD: &CHROMDRIVER_DOWNLOAD
    - curl -L "https://github.com/spryker/docker-chromedriver/archive/master.zip" -o $HOME/chromium-ecosystem/docker-chromedriver.zip
    - rm -rf $HOME/chromium-ecosystem/docker-chromedriver-master
    - unzip -o $HOME/chromium-ecosystem/docker-chromedriver.zip -d $HOME/chromium-ecosystem/
    - rm -rf $HOME/chromium-ecosystem/*.zip
    - export CHROMEDRIVER_REVISION=814168

_BEFORE_INSTALL_SCRIPT: &BEFORE_INSTALL_SCRIPT
    - echo "_BEFORE_INSTALL_SCRIPT"
    - sudo rm -f /etc/apt/sources.list.d/pgdg.list
    - nvm install 18 > /dev/null
    - nvm use 18
    - mkdir -p shared/data/common/jenkins
    - mkdir -p shared/data/common/jenkins/jobs
    - mkdir -p data/cache -m 0777
    - mkdir -p data/logs -m 0777
    - chmod -R 777 data/
    - chmod -R 660 config/Zed/dev_only_private.key
    - chmod -R 660 config/Zed/dev_only_public.key
    - chmod -R a+x config/Shared/ci/travis/
    - phpenv config-add config/Shared/ci/travis/travis.php.ini
    - phpenv config-rm xdebug.ini
    - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

_INSTALL_CHROMEDRIVER: &INSTALL_CHROMEDRIVER
    - *CHROMDRIVER_DOWNLOAD
    - . $HOME/chromium-ecosystem/docker-chromedriver-master/chromium-installer $CHROMEDRIVER_REVISION $HOME/chromium-ecosystem false

_INSTALL_MAILCATCHER: &INSTALL_MAILCATCHER
    - rvm install 3.0
    - rvm use 3.0 --default
    - echo "_INSTALL_MAILCATCHER"
    - config/Shared/ci/travis/install_mailcatcher.sh

_INSTALL_SCRIPT: &INSTALL_SCRIPT
    - echo "_INSTALL_SCRIPT"
    - *INSTALL_CHROMEDRIVER
    - *INSTALL_MAILCATCHER
    - *INSTALL_ELASTICSEARCH_7

_VALIDATION_SCRIPT: &VALIDATION_SCRIPT
    - echo "_VALIDATION_SCRIPT"
    - vendor/bin/console code:propel:validate-abstract
    - vendor/bin/console propel:schema:validate
    - vendor/bin/console propel:schema:validate-xml-names
    - vendor/bin/console transfer:validate
    - vendor/bin/spryker-dev-console dev:validate-module-schemas
    - vendor/bin/spryker-dev-console dev:validate-module-databuilders
    - vendor/bin/console dev:composer:replace -d -v
    - vendor/bin/spryker-dev-console dev:sync-composer -d
    - vendor/bin/spryker-dev-console dev:module-meta-files -d -v
    - vendor/bin/console dev:composer:update-json-files -d -v
    - vendor/bin/console dev:composer:validate-json-files
    - vendor/bin/console code:sniff:style
    - vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2
    - vendor/bin/phpstan analyze
    - composer psalm

    - npm install
    - npm install speccy@0.11.0 -g
    - speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default
    - speccy lint src/Generated/GlueStorefront/Specification/spryker_storefront_api.schema.yml --rules=default --skip openapi-tags
    - speccy lint src/Generated/GlueBackend/Specification/spryker_backend_api.schema.yml --rules=default --skip openapi-tags

_VALIDATION_SCRIPT_PHP8: &VALIDATION_SCRIPT_PHP8
    - echo "_VALIDATION_SCRIPT"
    - vendor/bin/phpstan analyze

    - vendor/bin/console dev:dependency:find
    - vendor/bin/spryker-dev-console dev:deprecation-links:check
    - chmod +x tests/*.sh
    - tests/travis_check_untracked.sh

_VALIDATION_SCRIPT_PHP_LOWEST: &VALIDATION_SCRIPT_PHP_LOWEST
    - echo "_VALIDATION_SCRIPT"
    - vendor/bin/phpstan analyze

_VALIDATION_FRONT_END_SCRIPT: &VALIDATION_FRONT_END_SCRIPT
    - echo "_VALIDATION_FRONT_END_SCRIPT"
    - npm ci
    - npm run formatter
    - npm run yves:stylelint
    - npm run yves:lint

_VALIDATION_SNYK_SCRIPT: &VALIDATION_SNYK_SCRIPT
    - echo "_VALIDATION_SNYK_SCRIPT"
    - npm install --location=global snyk
    - snyk monitor --all-projects --org=c408eea4-f0a4-4d7a-846d-5457aefa0cac
    - snyk test --all-projects --org=c408eea4-f0a4-4d7a-846d-5457aefa0cac --severity-threshold=high

_EVALUATOR_SCRIPT: &EVALUATOR_SCRIPT
    - vendor/bin/evaluator evaluate --exclude-checkers=SPRYKER_DEV_PACKAGES_CHECKER,MINIMUM_ALLOWED_SHOP_VERSION --format=compact

_BROWSER_TESTING_AFTER_SCRIPT: &BROWSER_TESTING_AFTER_SCRIPT
    - if [[ $TRAVIS_TEST_RESULT == 0 ]] ; then rm /tmp/chromedriver.log ; fi
    - if [[ $TRAVIS_TEST_RESULT == 1 ]] ; then gzip --best /tmp/chromedriver.log ; fi

_DOCKER_BUILD_TEMPLATE: &DOCKER_BUILD_TEMPLATE
    stage: test
    os: linux
    dist: bionic
    language: shell
    addons:
        hosts:
            - backend-api.de.spryker.local
            - backend-gateway.de.spryker.local
            - backoffice.de.spryker.local
            - glue.de.spryker.local
            - glue-backend.de.spryker.local
            - yves.de.spryker.local
            - mp.de.spryker.local
            - glue-storefront.de.spryker.local
        apt:
            packages:
                - apache2-utils
                - apt-transport-https
                - ca-certificates
                - curl
                - gnupg-agent
                - pigz
                - software-properties-common
            sources:
                - sourceline: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable'
                  key_url: https://download.docker.com/linux/ubuntu/gpg
    install:
        - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSwgImlwdjYiOiBmYWxzZSwgIm10dSI6IDE0NTB9|base64 -d|sudo tee /etc/docker/daemon.json
        - sudo apt-get install docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose
    before_install:
        - sudo rm -f /etc/apt/sources.list.d/pgdg.list
        - sudo apt upgrade
        - sudo apt update
        - |
            ./config/Shared/ci/travis/download-and-cache-file.sh  \
              https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz \
              $HOME/other-download
    before_script:
        - ./config/Shared/ci/travis/docker-credentials.sh
        - sudo systemctl start docker
        - docker version
        - docker buildx version
    after_script: skip

_DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE: &DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
    stage: test
    os: linux
    dist: bionic
    language: shell
    addons:
        hosts:
            - backend-api.eu.spryker.local
            - backend-gateway.eu.spryker.local
            - backoffice.eu.spryker.local
            - glue.eu.spryker.local
            - glue-backend.eu.spryker.local
            - glue-storefront.eu.spryker.local
            - yves.eu.spryker.local
            - mp.eu.spryker.local
        apt:
            packages:
                - apache2-utils
                - apt-transport-https
                - ca-certificates
                - curl
                - gnupg-agent
                - pigz
                - software-properties-common
            sources:
                - sourceline: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable'
                  key_url: https://download.docker.com/linux/ubuntu/gpg
    install:
        - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSwgImlwdjYiOiBmYWxzZSwgIm10dSI6IDE0NTB9|base64 -d|sudo tee /etc/docker/daemon.json
        - sudo apt-get install docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose
    before_install:
        - |
            ./config/Shared/ci/travis/download-and-cache-file.sh  \
              https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz \
              $HOME/other-download
    before_script:
        - ./config/Shared/ci/travis/docker-credentials.sh
        - sudo systemctl start docker
        - docker version
        - docker buildx version
    after_script: skip

version: ~> 1.0

env:
    global:
        - APPLICATION_ENV=ci.pgsql
        - SPRYKER_TESTING_ENABLED=1
        - PROJECT=suite
        - ARTIFACTS_KEY=$AWS_S3_ACCESS_KEY_ID
        - ARTIFACTS_SECRET=$AWS_S3_SECRET_ACCESS_KEY
        - ARTIFACTS_BUCKET=spryker-ci
        - AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY
        - AWS_DEFAULT_REGION=eu-west-1
        - POSTGRES_PORT="5432"
        - PGPORT="5432"
        - secure: 'C0grf6C5zvHayJK2OpdqLGyTmfX1MXvHciwtXHggToHKvsvuNgJmufAljF4h/+s/FBqq2ZFenx6SYJ7ZyF3TsUxx8d43r01C7F7XfjCVH0Pq9e55gADRCsLnrKMS+f9ifKwgb84svSFJn6CDxSlNFij5XDf4tXRwpw8mK+WXC3vFE1upbl+E5kizS8SuQbj0WOQ4nERH0Km+47AjiTIaux7d+8QkUUzvrbkqbCQ/eeTySkZyLO4t16DJXMYNgjskWCTVjnjK81Ovl9a8EmHZ31zFSSbM5OSNSTjo36yOlKgkvY7hQ/I5qfr3ZtN2gyIvYXCnUF2xyX8OP8VfUUgiMEXxo3qH8bxynEm9xgVq0yjRKgY5WC9VX0IoX8QYnZKbOVJIpgDIBCNm+A80ohgjWzr2MeZv/tnyIuVEldMJsS22RtM4Ml++a33cSsCIggMYUZzZv5rWaaJzd3mCcbLBp0Bij1hBG/jOybpMJa7ph1lD2BiyVdKOGEruukOWWvlkVEDQEir4/P/A4OK76hDZT7imILVQ3txCDcJsYXWVrRgnVh9ZV0vUK4lM3eTJsQeYmtFPfNBlxFXczx78slLWBDg6x1uUc6s8Ld4eDZJXUiYn27gqmzgUbJskNpvEuZfZBRJKJfzYwOyeqJEn8cc/N1xZ8LN+mFko9wciDodTxXE='
        - secure: 'SmjbeRZILMQoKXnU2pF8z6awbPgeQ+mIsRDbBuHG5djKo1temzZX54I5qknhHvr7LL1KDg0KIcznW2GrnjaqwDA/mdOSoubmw8nqa3jKwAtUu+Z/6tSdR2rsrpIvoMfcqQ2993MY9uba3vcseA5SnZHAh3Epfb6wGFdjIr06etwV/qs2jQgjrkMlAAUHWZQHkpENnSIEvTz6Znci5k7XbMDoyeaKqw6azBH2+xF9wXcrrxRyIAv92cxLuVdjfugera+BLGqnzydApHvYupCnugPJdMSVMQfJwLXG1PNlKlIur/dE4Y3CXBhEscrJjthwwhAQpA06qoMwxuXliY+cl4DrlJSrSSSVrHI1smpcgM1eXJzZpjCWb5jDe+bSdVLIbcddR+IcxjgwrOkPwcuff18+8VfrY/j49cst0nsjh1zfi0OR6ikfD/cLGagYGI8qR5PSPjSAVPTJybANqS/xLr/7an0T1kcAmw9zWhEp0Hj9hGBx8G8COOr0Yai3YiGSUizniIkSj5v9SL9gicTW99Uvi35UQJkH1AV8Bwlp3jzgFmUr4VHszYtZII6OtM4kKpF93xntrVZgdT/JV6+B9BKtXTV2xTf/IO50/A/orYXO6sRHIIkcuORsM/NXl7bEOzcMmLc+BZy21C1CK4V6DdPS/hwVAtj2wap3oQtQTdg='
        - TOUCHED_MODULES_VALIDATION_LIMIT_FIRST_JOB=250
        - TOUCHED_MODULES_VALIDATION_LIMIT_SECOND_JOB=300
        - TOUCHED_MODULES_VALIDATION_LIMIT_THIRD_JOB=300
        - TOUCHED_MODULES_VALIDATION_LIMIT_FOURTH_JOB=10000

branches:
    only:
        - master
        - /feature\/[a-z]+-\d+\/(master|dev).+|feature\/[a-z]+-\d+\/[a-z]+-\d+\/(master|dev).+/
        - /(bugfix|hotfix|beta)\/.+/

cache:
    directories:
        - $HOME/other-downloads
        - $HOME/.composer/cache
        - $HOME/.rvm/gems # Mailcatcher is a ruby gem, takes 5 minutes to install.
        - $HOME/.nvm/.cache
        - /tmp/pear/cache/
        - $HOME/chromium-ecosystem
        - /tmp/phpstan/

notifications:
    email: false

os: linux
dist: bionic
language: php

git:
    depth: 1

stages:
    - Build
    - Test

jobs:
    fast_finish: true
    include:
        - name: Code generation.
          php: '8.1'
          stage: Build
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *BEFORE_INSTALL_SCRIPT
          install:
              - echo "_COMPOSER_INSTALL"
              - COMPOSER_MEMORY_LIMIT=-1 composer install --no-interaction --prefer-install=auto
              - *INSTALL_SCRIPT
          script:
              - travis_wait 60 vendor/bin/install DE -r ci.code-generate
          after_success:
              - *AWS_SYNC_UP_POSTGRES
          addons:
              postgresql: 9.6
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Code generation / Dynamic Store
          php: '8.1'
          stage: Build
          env:
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          before_install:
              - *BEFORE_INSTALL_SCRIPT
          install:
              - echo "_COMPOSER_INSTALL"
              - COMPOSER_MEMORY_LIMIT=-1 composer install --no-interaction --prefer-install=auto
              - *INSTALL_SCRIPT
          script:
              - travis_wait 60 vendor/bin/install -r ci.code-generate
          after_success:
              - *AWS_SYNC_UP_POSTGRES
          addons:
              postgresql: 9.6
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Evaluator check
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *EVALUATOR_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: JS Validation
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          script:
              - *VALIDATION_FRONT_END_SCRIPT

        - name: Snyk Validation
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          script:
              - *VALIDATION_SNYK_SCRIPT

        - name: PHP Validation
          php: '8.1'
          stage: Test
          dist: jammy
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *VALIDATION_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP Validation (prefer-lowest)
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - *VALIDATION_SCRIPT_PHP_LOWEST
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker (prefer-lowest) [1/4]
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 0,250
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker (prefer-lowest) [2/4]
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 250,250
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker (prefer-lowest) [3/4]
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 500,200
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker (prefer-lowest) [4/4]
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 700
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker-shop (prefer-lowest)
          php: '8.1'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m SprykerShop.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.1 / MarketPlace Testing
          php: '8.1'
          stage: Test
          dist: jammy
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - sudo apt install openssl libssl-dev
              - rvm reinstall ruby
              - *INSTALL_SCRIPT
          script:
              - unset CHROME_BIN && export CHROME_BIN=${CHROMIUM_BINARY}
              # Install npm packages
              - vendor/bin/console frontend:project:install-dependencies -vvv
              - npm run mp:build:production
              - npm run mp:stylelint
              - npm run mp:lint
              - npm run mp:test
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 Validation
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *VALIDATION_SCRIPT_PHP8
              - export MODULES_VALIDATION_LIMIT=100000; # Unlimited
              - if [[ $TRAVIS_BRANCH == *-split-validation ]]; then
                export MODULES_VALIDATION_LIMIT=$TOUCHED_MODULES_VALIDATION_LIMIT_FIRST_JOB;
                fi
              - tests/travis_check_touched_modules.sh $MODULES_VALIDATION_LIMIT;
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 Validation [2/4]
          php: '8.2.0'
          stage: Test
          if: branch =~ \-split\-validation$
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - chmod +x tests/*.sh
              - tests/travis_check_touched_modules.sh $TOUCHED_MODULES_VALIDATION_LIMIT_SECOND_JOB $TOUCHED_MODULES_VALIDATION_LIMIT_FIRST_JOB
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 Validation [3/4]
          php: '8.2.0'
          stage: Test
          if: branch =~ \-split\-validation$
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - chmod +x tests/*.sh
              - tests/travis_check_touched_modules.sh $TOUCHED_MODULES_VALIDATION_LIMIT_THIRD_JOB $((TOUCHED_MODULES_VALIDATION_LIMIT_FIRST_JOB + TOUCHED_MODULES_VALIDATION_LIMIT_SECOND_JOB))
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 Validation [4/4]
          php: '8.2.0'
          stage: Test
          if: branch =~ \-split\-validation$
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - chmod +x tests/*.sh
              - tests/travis_check_touched_modules.sh $TOUCHED_MODULES_VALIDATION_LIMIT_FOURTH_JOB $((TOUCHED_MODULES_VALIDATION_LIMIT_FIRST_JOB + TOUCHED_MODULES_VALIDATION_LIMIT_SECOND_JOB + TOUCHED_MODULES_VALIDATION_LIMIT_THIRD_JOB))
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 PHPStan spryker/spryker [1/4]
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 0,250
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 PHPStan spryker/spryker [2/4]
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 250,250
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 PHPStan spryker/spryker [3/4]
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 500,200
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 PHPStan spryker/spryker [4/4]
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v -o 700
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.2 PHPStan spryker/spryker-shop
          php: '8.2.0'
          stage: Test
          env:
              - APPLICATION_STORE=DE
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m SprykerShop.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.mariadb.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 40 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 40 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Functional Tests / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.functional.mariadb.dynamic-store.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 40 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Functional Tests / Prefer Lowest
          <<: *DOCKER_BUILD_TEMPLATE
          language: php
          php: '8.1'
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - docker/sdk boot -v deploy.ci.functional.mariadb.prefer-lowest.yml
              - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Functional Tests / Prefer Lowest / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          language: php
          php: '8.1'
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - docker/sdk boot -v deploy.ci.functional.mariadb.prefer-lowest.dynamic-store.yml
              - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / PostgreSQL / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / PostgreSQL / Functional Tests / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.functional.dynamic-store.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Acceptance / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.dynamic-store.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Acceptance / Prefer Lowest
          <<: *DOCKER_BUILD_TEMPLATE
          language: php
          php: '8.1'
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.prefer-lowest.yml
              - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Acceptance / Prefer Lowest / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          language: php
          php: '8.1'
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.prefer-lowest.dynamic-store.yml
              - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.1 / PostgreSQL / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.1 / PostgreSQL / Acceptance / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.acceptance.dynamic-store.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.mariadb.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.functional.mariadb.dynamic-store.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.2 / PostgreSQL / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.2 / PostgreSQL / Functional Tests / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.functional.dynamic-store.yml
              - travis_wait 30 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage0.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage1.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.stage2.yml
              - travis_wait 35 docker/sdk testing codecept run -c codeception.functional.glue.yml

        - name: Docker / Alpine / PHP 8.2 / MariaDB / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.2 / MariaDB / Acceptance / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.dynamic-store.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.2 / PostgreSQL / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 8.2 / PostgreSQL / Acceptance / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
          script:
              - docker/sdk boot -v deploy.ci.acceptance.dynamic-store.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing codecept run -c codeception.acceptance.yml
              - travis_wait 30 docker/sdk testing codecept fixtures
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - travis_wait 35 docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Debian / PHP 8.2 / Frontend & Assets
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2-debian
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.yml
              - SPRYKER_BUILD_HASH=myhash travis_wait 30 docker/sdk export images
              - docker run -it --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKOFFICE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_GATEWAY_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_API_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_CONFIGURATOR_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKOFFICE_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_GATEWAY_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_API_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/

        - name: Docker / Alpine / PHP 8.1 / MariaDB / Robot / API
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          language: php
          php: '8.1'
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.1
              - TRAVIS=1
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - *COMPOSER_INSTALL
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
              - travis_wait 35 docker/sdk up -t
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - sudo apt install awscli -q
              - docker/sdk exec robot-framework robot -v env:api_suite -v docker:True --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.suite .
          after_script:
              - *AWS_SYNC_CONFIG
              - |
                  AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET aws s3 cp $TRAVIS_BUILD_DIR/.robot/results s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit-robot-api-ci/$TRAVIS_BUILD_NUMBER/PHP8.1MariaDBRobot/ \
                    --recursive \
                    --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"
          after_failure:
              - echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=${AWS_DEFAULT_REGION}&prefix=suite-nonsplit-robot-api-ci/${TRAVIS_BUILD_NUMBER}/PHP8.1MariaDBRobot/log.html"
              - echo "You must have VPN access to AWS (Spryker-Internal account)"

        - name: Docker / Alpine / PHP 8.2 / PostgreSQL / Robot / API
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          language: php
          php: '8.2.0'
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - TRAVIS=1
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - *COMPOSER_INSTALL
              - docker/sdk boot -v deploy.ci.acceptance.yml
              - travis_wait 35 docker/sdk up -t -v
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - sudo apt install awscli -q
              - docker/sdk exec robot-framework robot -v env:api_suite -v db_engine:psycopg2 -v docker:True --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.suite .
          after_script:
              - *AWS_SYNC_CONFIG
              - |
                  AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET aws s3 cp $TRAVIS_BUILD_DIR/.robot/results s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit-robot-api-ci/$TRAVIS_BUILD_NUMBER/PHP8.2PostgreSQLRobot/ \
                    --recursive \
                    --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"
          after_failure:
              - echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=${AWS_DEFAULT_REGION}&prefix=suite-nonsplit-robot-api-ci/${TRAVIS_BUILD_NUMBER}/PHP8.2PostgreSQLRobot/log.html"
              - echo "You must have VPN access to AWS (Spryker-Internal account)"

        - name: Docker / Alpine / PHP 8.2 / MariaDB / Robot / API / Dynamic Store
          <<: *DOCKER_BUILD_TEMPLATE_DYNAMIC_STORE
          stage: Test
          language: php
          php: '8.2.0'
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
              - SPRYKER_DYNAMIC_STORE_MODE=true
              - SPRYKER_CURRENT_REGION=EU
              - TRAVIS=1
          script:
              - phpenv config-rm xdebug.ini
              - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
              - *COMPOSER_INSTALL
              - docker/sdk boot -v deploy.ci.api.mariadb.dynamic-store.robot.yml
              - travis_wait 35 docker/sdk up -t -v
              - travis_wait 35 docker/sdk testing console queue:worker:start --stop-when-empty
              - sudo apt install awscli -q
              - docker/sdk exec robot-framework robot -v env:api_suite -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.suite .
          after_script:
              - *AWS_SYNC_CONFIG
              - |
                  AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET aws s3 cp $TRAVIS_BUILD_DIR/.robot/results s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/dms-on/suite-nonsplit-robot-api-ci/$TRAVIS_BUILD_NUMBER/PHP8.2MariaDBRobot/ \
                    --recursive \
                    --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"
          after_failure:
              - echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=${AWS_DEFAULT_REGION}&prefix=dms-on/suite-nonsplit-robot-api-ci/${TRAVIS_BUILD_NUMBER}/PHP8.2MariaDBRobot/log.html"
              - echo "You must have VPN access to AWS (Spryker-Internal account)"

services:
    - redis
